"""Add location column to hotel table

Revision ID: 64ea263ce69c
Revises: 
Create Date: 2025-10-24 12:28:39.399576

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '64ea263ce69c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('booking_items',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('booking_id', sa.BigInteger(), nullable=False),
    sa.Column('room_type_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price_per_room', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ),
    sa.ForeignKeyConstraint(['room_type_id'], ['room_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('coupons', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('code'))

    op.drop_table('coupons')
    op.drop_table('payment')
    op.drop_table('booking_item')
    op.drop_table('audit_log')
    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('total_price', sa.Numeric(precision=10, scale=2), nullable=False))
        batch_op.add_column(sa.Column('checkin_dat', sa.Date(), nullable=False))
        batch_op.alter_column('id',
               existing_type=mysql.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('status',
               existing_type=mysql.ENUM('pending', 'confirmed', 'cancelled', 'checking_in', 'checking_out', collation='utf8mb4_unicode_ci'),
               type_=sa.Enum('pending', 'confirmed', 'cancelled', 'checked_in', 'checked_out'),
               existing_nullable=True,
               existing_server_default=sa.text("'pending'"))
        batch_op.drop_index(batch_op.f('idx_booking_dates'))
        batch_op.drop_index(batch_op.f('idx_booking_user'))
        batch_op.drop_constraint(batch_op.f('bookings_ibfk_1'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.drop_column('created_at')
        batch_op.drop_column('curreny')
        batch_op.drop_column('total_amount')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('checkin_date')

    with op.batch_alter_table('hotels', schema=None) as batch_op:
        batch_op.add_column(sa.Column('location', sa.String(length=255), nullable=True))
        batch_op.drop_column('address')
        batch_op.drop_column('created_at')
        batch_op.drop_column('star_rating')
        batch_op.drop_column('city')

    with op.batch_alter_table('room_inventory', schema=None) as batch_op:
        batch_op.add_column(sa.Column('available_count', sa.Integer(), nullable=False))
        batch_op.drop_index(batch_op.f('date'))
        batch_op.drop_index(batch_op.f('idx_inventory_date'))
        batch_op.drop_index(batch_op.f('room_type_id'))
        batch_op.drop_constraint(batch_op.f('room_inventory_ibfk_1'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'room_types', ['room_type_id'], ['id'])
        batch_op.drop_column('avilability_count')

    with op.batch_alter_table('room_types', schema=None) as batch_op:
        batch_op.add_column(sa.Column('room_type_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('date', sa.Date(), nullable=False))
        batch_op.add_column(sa.Column('available_count', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('price_override', sa.Numeric(precision=10, scale=2), nullable=True))
        batch_op.drop_index(batch_op.f('idx_roomtype_hotel'))
        batch_op.drop_constraint(batch_op.f('room_types_ibfk_1'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'room_types', ['room_type_id'], ['id'])
        batch_op.drop_column('hotel_id')
        batch_op.drop_column('create_at')
        batch_op.drop_column('base_price')
        batch_op.drop_column('description')
        batch_op.drop_column('total_count')
        batch_op.drop_column('name')
        batch_op.drop_column('capacity')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('email', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('password_hash', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('full_name', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('role', sa.Enum('customer', 'admin'), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.drop_index(batch_op.f('EMAIL'))
        batch_op.create_unique_constraint(None, ['email'])
        batch_op.drop_column('EMAIL')
        batch_op.drop_column('FULL_NAME')
        batch_op.drop_column('CREATED_AT')
        batch_op.drop_column('PHONE')
        batch_op.drop_column('ROLE')
        batch_op.drop_column('UPDATED_AT')
        batch_op.drop_column('PASSWARD_HASH')
        batch_op.drop_column('ID')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ID', mysql.INTEGER(), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('PASSWARD_HASH', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=False))
        batch_op.add_column(sa.Column('UPDATED_AT', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True))
        batch_op.add_column(sa.Column('ROLE', mysql.ENUM('CUSTOMER', 'ADMIN', collation='utf8mb4_unicode_ci'), server_default=sa.text("'CUSTOMER'"), nullable=True))
        batch_op.add_column(sa.Column('PHONE', mysql.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('CREATED_AT', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True))
        batch_op.add_column(sa.Column('FULL_NAME', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True))
        batch_op.add_column(sa.Column('EMAIL', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index(batch_op.f('EMAIL'), ['EMAIL'], unique=True)
        batch_op.drop_column('created_at')
        batch_op.drop_column('role')
        batch_op.drop_column('full_name')
        batch_op.drop_column('password_hash')
        batch_op.drop_column('email')
        batch_op.drop_column('id')

    with op.batch_alter_table('room_types', schema=None) as batch_op:
        batch_op.add_column(sa.Column('capacity', mysql.TINYINT(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('name', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=30), nullable=False))
        batch_op.add_column(sa.Column('total_count', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('description', mysql.TEXT(collation='utf8mb4_unicode_ci'), nullable=True))
        batch_op.add_column(sa.Column('base_price', mysql.DECIMAL(precision=10, scale=2), nullable=False))
        batch_op.add_column(sa.Column('create_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True))
        batch_op.add_column(sa.Column('hotel_id', mysql.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('room_types_ibfk_1'), 'hotels', ['hotel_id'], ['id'], ondelete='CASCADE')
        batch_op.create_index(batch_op.f('idx_roomtype_hotel'), ['hotel_id'], unique=False)
        batch_op.drop_column('price_override')
        batch_op.drop_column('available_count')
        batch_op.drop_column('date')
        batch_op.drop_column('room_type_id')

    with op.batch_alter_table('room_inventory', schema=None) as batch_op:
        batch_op.add_column(sa.Column('avilability_count', mysql.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('room_inventory_ibfk_1'), 'room_types', ['room_type_id'], ['id'], ondelete='CASCADE')
        batch_op.create_index(batch_op.f('room_type_id'), ['room_type_id'], unique=True)
        batch_op.create_index(batch_op.f('idx_inventory_date'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('date'), ['date'], unique=True)
        batch_op.drop_column('available_count')

    with op.batch_alter_table('hotels', schema=None) as batch_op:
        batch_op.add_column(sa.Column('city', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=30), nullable=True))
        batch_op.add_column(sa.Column('star_rating', mysql.TINYINT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True))
        batch_op.add_column(sa.Column('address', mysql.TEXT(collation='utf8mb4_unicode_ci'), nullable=True))
        batch_op.drop_column('location')

    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('checkin_date', sa.DATE(), nullable=False))
        batch_op.add_column(sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True))
        batch_op.add_column(sa.Column('total_amount', mysql.DECIMAL(precision=10, scale=2), nullable=False))
        batch_op.add_column(sa.Column('curreny', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=8), server_default=sa.text("'INR'"), nullable=True))
        batch_op.add_column(sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('bookings_ibfk_1'), 'users', ['user_id'], ['ID'])
        batch_op.create_index(batch_op.f('idx_booking_user'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_booking_dates'), ['checkin_date', 'checkout_date'], unique=False)
        batch_op.alter_column('status',
               existing_type=sa.Enum('pending', 'confirmed', 'cancelled', 'checked_in', 'checked_out'),
               type_=mysql.ENUM('pending', 'confirmed', 'cancelled', 'checking_in', 'checking_out', collation='utf8mb4_unicode_ci'),
               existing_nullable=True,
               existing_server_default=sa.text("'pending'"))
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=mysql.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.drop_column('checkin_dat')
        batch_op.drop_column('total_price')

    op.create_table('audit_log',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('entity', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50), nullable=True),
    sa.Column('entity_id', mysql.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('action', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50), nullable=True),
    sa.Column('performed_by', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('details', mysql.JSON(), nullable=True),
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('booking_item',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('booking_id', mysql.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('room_type_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('price_per_room', mysql.DECIMAL(precision=10, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name=op.f('booking_item_ibfk_1'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['room_type_id'], ['room_types.id'], name=op.f('booking_item_ibfk_2')),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('payment',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('booking_id', mysql.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('amount', mysql.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('method', mysql.ENUM('card', 'netbanking', 'upi', 'offline'), server_default=sa.text("'card'"), nullable=True),
    sa.Column('status', mysql.ENUM('initiated', 'success', 'failed', 'refunded'), nullable=True),
    sa.Column('txn_refernce', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50), nullable=True),
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name=op.f('payment_ibfk_1'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('coupons',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('code', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50), nullable=False),
    sa.Column('description', mysql.TEXT(collation='utf8mb4_unicode_ci'), nullable=True),
    sa.Column('discount_type', mysql.ENUM('percentage', 'flat'), nullable=False),
    sa.Column('discount_value', mysql.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('valid_from', sa.DATE(), nullable=True),
    sa.Column('valid_to', sa.DATE(), nullable=True),
    sa.Column('min_amount', mysql.DECIMAL(precision=12, scale=2), server_default=sa.text("'0.00'"), nullable=True),
    sa.Column('max_uses', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=True),
    sa.Column('used_count', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('coupons', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('code'), ['code'], unique=True)

    op.drop_table('booking_items')
    # ### end Alembic commands ###
